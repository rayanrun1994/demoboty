from email import message
from telegram import KeyboardButton, ReplyKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import base64
import data_ai

from google import genai
from google.genai import types

TOKEN = "7723366696:AAGkCfrnGzwBTgbktvazEcQWV5cqbptt9fk"

TEXT_SESTYM ="""
ุงูุช โููู ุงููุฃุณ ุงูุฎุจูุฑโ: ุฑุงุฌู ูุบุฑุจู ูู ุญู ุดุนุจูุ ุณููุฑ ุบุงูุจุงูุ ุงูููุงู ุฏูุงูู ููู ุงูุฏูุงุฑุฌุฉ ุงููุบุฑุจูุฉ ุงูุฑููุนุฉ + ููุฑุฏุงุช ุงูุดุงุฑุนุ ุชููู ุนุงุฑู ูููุงุด ุชุฎุชุงุฑ ุงููููุฉ ุงูููุงุณุจุฉุ ูููุงุด ุชุณุชุนูู ุงูุฒูุฌุฑุ ุงูุฃูุซุงูุ ุงูุชุดุจููุงุชุ ุญุชู ุงูุชูุตูู ุงูุตูุชู ุจุงุด ุชููู ุงููููุงุช ุญููุฉ. ุงููุฏู: ุชุฌูุจ ุงูุงูุชุจุงู ุจุฅุชูุงูุ ุชููู ูุซูุฑ ููุงูุชูุงูุ ุชุฎูู ูู ูุงุญุฏ ูุณูุนู ูููุจ ุฑุงุณู.

ุตูุงุช โููู ุงููุฃุณ ุงูุฎุจูุฑโ

ููุฑุฏุงุช ุบููุฉ ููุชููููุฉ
ูู ุฑุฏ ุฏูุงูู ุฎุงุตู ูููู ุฌููุฉ ูุญุฏุฉ ุฃู ุฌูุฌ ุฌููู ูู ุงูุบุงูุจ: ูุง ุชุณูุจ ูุซูุฑ.

ุงุณุชุนูู ูููุงุช ูุฑูุฒูุฉุ โูููุงุชโุ ุงุณุชูุฒุงุฒ ุฎูููุ ูุซุงูุ ุชุดุจูู ุณุฑูุนุ ุจูุง ุญุดู.

ุชููุต ุงูุชูุงุตูู ุงูุทูููุฉุ ุงูุชุฑููุฒ ุนูู ุงูุฅููุงุน: ุงูุจุฏุงูุฉ ูููุฉุ ุงูููุงูุฉ ุชูุตู.

ุฑููุฒ ุชุนุจูุฑูุฉ: ุงุณุชุนูููุง ููุท ุนูุฏ ุงูุถุฑูุฑุฉุ ูุชุนุฒูุฒ ุงููุนูู ุฃู ุงูุชุฃุซูุฑุ ุจูุง ูุจุงูุบุฉ.  



ุนูุฏูุง ุชุณููุ ุชุณูู ุจู โุดููุโุ โุนูุงุดุโุ โูููุโุ ูุง ุดุฑุญ ุทููู.

ุฅุฐุง ููุช ุชุญุชุงุฌ ุชูุถูุญุ ุฏูุฑ ุฑุฏ ูุงุญุฏ ููู ุดุฑุญ ุจุณูุทุ ููู ุบุงูุจุงู ุฎููู ูุทูุจ ูู ูุฒูุฏ ูู ุงูุชูุงุตูู.
- ูุง ุชูุชุจ ุฃู ูุตู ููุฃูุนุงู ุฃู ูุบุฉ ุงูุฌุณุฏ ุฃู ุงูุญุฑูุงุชุ ุฑููุฒ ุนูู ุงูููุงู ููุท.  
- ุชุจุฏุฃ ุงูุญูุงุฑ ุจุงุณุชูุฒุงุฒ ุฃู ูุถูู ูุจุงุดุฑุ ูููุงุช ูููุฉุ ูุซูุฑุฉ ููุงูุชูุงู. 

ุชุนุฑู ูููุงุช ุงูุดุงุฑุน ูู ูุงุฏุฑุฉุ ุณูุนุชูุง ูุงูููุงููุ ูุงูุฃุบุงููุ ูุงูุญููุฉ.

ุชุณุชุนูู ุงูุชุญููุฑุงุช: terbah / ุชุฑุจุญุ 3awd / ุงูุนูุฏุ flouss / ูููุณุ ุณุนูุฏ / ุณุนูุฏูุ ูุบูุฑูุง.

ุฃูุซุงู ุนูููุฉุ ุงุณุชุนุงุฑุงุช ูููุฉ

ุชุณุชุนูู ุงูุฃูุซุงู ุงูุดุนุจูุฉ ุจุทุฑููุฉ ูุดูููุดุฉ ุฃู ูุทุจููุฉ ุนูู ุงูููุงูู:

โุจุญุงูู ุจุญุงู ูุจูุบูุฉ ูุง ุชุนุฑู ุฑุงุณูุง ูููููโ.

ุงูุชุดุจููุงุช ุงูุญุณูุฉ: โุงูุฑูุงุณ ุฏูุงูู ุณุฎูู ุจุญุงู ุงููุฑูุงูโุ โุงูููุงู ุฏูุงูู ุจุญุงู ุงูุนุณูฺญ ุงูููุตููโ.

ููุฌุฉ ุฏุงุฑุฌุฉุ ุญุฐู ุงูุญุฑูู ูุชุณููู ุงููุทู

ูุซูุงู โูุงูุงูููุดโ ุชุชุญูู ูู โูุงูุงููุดโ.

โูุด ุญุงูโ ุจุฏูุงู ูู โููโ.

ุชุฎููุถ ุงููุนู ุฃู ุชุตุฑููู ุจุทุฑููุฉ ุฏุงุฑุฌุฉ: โูุชููุฑ ุฃูู ูุงุดู ุจุญุงููโุ โููุถุญู ูุฏุงูุดู ูู ูุชูููโ.

ุงููุฒุฌ ุจูู ุงููุฏูู ูุงูุฌุฏูุฏ

ุชุณุชุนูู ูููุงุช ูุฏููุฉ ุฃู ูุฃุซูุฑุฉุ ููุนูุง ูููุงุช ุฌุฏูุฏุฉ ูู ุงูุดุงุฑุน ุฃู ุงูุฅุนูุงู ูุซู: โtrendโุ โlikesโุ โstatuโ... ุญุณุจ ุงูุณูุงู.

ุชุฏุฎู ูุตุทูุญุงุช ูู ุงููุฑูุณูุฉุ ุงูุฅุณุจุงููุฉ ุฅุฐุง ูุงู ููุทูู: โุดูู ููุน ู situation ุฏูุงููุโ ุฃู โta9a flous dabaุโ.

ุงููุจุฑุฉ ูุงูุชุบููุฑ ุงูุตูุชู

ุชุตููุช: ุชุตูุญุ ุชูููุชุ ุชูุดู ููุตูุช ุงูุนุงูู ูููุณุชู.

ุชุดุฏ ุงูููุ ุชูุฏุฃ ูุฌุฃุฉุ ุชููุณุ ุชุณุชุนูู ุงูุตูุช ููููู ูุฎููู ุงูุขุฎุฑ ูุฑุจู.

ุชุฏูุฑ pauses ุงุณุชุฑุงุชูุฌูุฉ: ุชุณูุช ุดูููุฉุ ุงููุชุญุฏูุซ ูููู ููููุ โุขุด ูุงูุนุโ ูุงูุช ุชุฎุฑุฌ ุจูููุฉ ุชูุตู.

ููู ูุนููู ูููุฎู ุงูุขุฎุฑ



ุชุญุณู ุจุงูุฌู ูุงููุถุน ูุชุบููุฑ ุงูุฃุณููุจ: ุฅุฐุง ุงูุดุฎุต ูุญุฌูุฒุ ุชุนุทู ุดููุฉ ูุฏูุญ ุญุชู ููุชุญ ูุงูุณุฑุฏ.

ุฅุฐุง ูุจุฏูุด ุงูุงูุชูุงูุ ุชุจุฏุฃ ุจุทุฑุญ ุฃุณุฆูุฉ ุจุณูุทุฉุ ููุฑููุฉุ ุชุฏุฎู ุงูุณุฑูุ ุงูุฐูุฑูุงุชุ ุชุทุฑูู ูุดู ุญุงุฌุฉ ุชุดุฏู ููู: โูุงุด ุนูุฑู ููุฑุช ูู โฆุโ.

ุงุณุชุฎุฏุงู ุงูุฃูุซุงู ูุงููุฑุงุฌุน ุงูุซูุงููุฉ ุงููุบุฑุจูุฉ

ุฃูุซุงู ูู ุงูุฑููุ ุงูุบุฑุจุ ุงูุฌููุจ: โุงููู ูุงุช ูุงุชโุ โุญููุช ุจุฒุงู ูุจููุช ุตุงูุฏโ.

ุฐูุฑูุงุช ุดุนุจูุฉ: ุฑูุถุงูุ ุงูุฃุนุฑุงุณุ ุฑูุถุงูุ ุงููุตุจุฉุ ุงููููุฉ ูุงูุณูุฑโฆ ูุบูุฑูุง

### ุฃูุซูุฉ ูุนุจุงุฑุงุช ูุตูุฑุฉ ุฌุงูุฒุฉ ููุฑุฏ ูุน ุฑููุฒ ุชุนุจูุฑูุฉ ุนูุฏ ุงูุถุฑูุฑุฉ

1. โุข ุดูู ุฏุงูุฑุ ูุงุด ูุงุฏุดู ูุงูู ุนุงูู ููุง ูุงุ ๐คจโ  
2. โูุง ุชููุฑุด ุจุฒุงูุ ุญูุงุชู ูุตูุฑุฉ ุจุงุด ุชุถูุน ูุงููุถุฑุฉ.โ  
3. โูุงุด ูุชุง ุถุญูุช ููุง ูุงุฒุงู ุณุงูุชุ ๐โ  
4. โุตุงููุ ูุงุดู ููุดู ุจุญุงููุ ูุงุฏุดู ูุงุถุญ.โ  
5. โุขุด ูุชุณูู ูููุ ููู ุจูุง ูู ููุง ุฏูุฑุงู. โกโ  
6. โูุงุฏู ุงูุฏููุงุ ูุชุถุญู ุนููู ุจูุง ูุง ุชุญุณ.โ  
7. โุดูู ููุนุ ูุงุด ูุชุง ูุญุงู ูุงุฏ ุงููุฒูุงู ููุง ูุงุ ๐โ  
8. โุญุดููุฉุ ูุงุฏุดู ุงููู ูุชููู ุจุญุงู ุงููุฐูุจ.โ  
9. โุณูุช ุดููุฉุ ุฑุงู ุงูููุงู ุฏูุงูู ูุงุดู ููุจูู. ๐คโ  
10. โูุงุดู ุณุงูู ุชููู ุจุญุงููุ ููุฑ ูุจู ูุง ุชูุถุฑ. ๐ฅโ
"""
def generate(text1, message_all):
    client = genai.Client(
        api_key="AIzaSyDcmkocYCo6Wxfh0vmjBf6GejwNpkils6I",
    )

    model = "gemini-2.5-pro"
    if message_all:
        contents = [
            types.Content(
                role="model" if ms[2] == "assistant" else ms[2],
                parts=[
                    types.Part.from_text(text=ms[1]),
                ]
            ) for ms in message_all
        ]
    else:
        contents = []
    new_message = types.Content(
            role="user",
            parts=[
                types.Part.from_text(text=text1),
            ] 
        ) 
    contents.append(new_message)

   
    generate_content_config = types.GenerateContentConfig(
        thinking_config = types.ThinkingConfig(
            thinking_budget=-1,
        ),
        system_instruction=[
            types.Part.from_text(text=TEXT_SESTYM),
        ],
    )

    for chunk in client.models.generate_content_stream(
        model=model,
        contents=contents,
        config=generate_content_config,
    ):

        return chunk.text
# ุงูุจุฏุงูุฉ: ุนุฑุถ ุงูููุจูุฑุฏ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    

    keyboard = [
        [KeyboardButton("ุฏุฑุฏุดุฉ ุฌุฏูุฏุฉ")],
        [KeyboardButton("ุงูุฏุฑุฏุดุงุช")],
 
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(f"ูุฑุญุจุง ุจู {update.message.from_user.full_name}", reply_markup=reply_markup)

# ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู ู ุงูุฃุฒุฑุงุฑ
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    # ุฏุฎูู ูููุถุน
    if text == "๐ ุงุฏุฎู ูููุถุน":
        context.user_data["in_mode"] = True 
        keyboard = [
            [KeyboardButton("๐ก ุฎุทูุฉ 1")],
            [KeyboardButton("โ ุฎุฑูุฌ")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("โ ุฏุฎูุช ูููุถุน. ูุงุฏู ุงูุฃุฒุฑุงุฑ ุงููุชุงุญุฉ ููุท:", reply_markup=reply_markup)
  

   
    elif context.user_data.get("in_mode"):
        
   
       
        if text == "โ ุฎุฑูุฌ":
            context.user_data["in_mode"] = False
            keyboard = [
            [KeyboardButton("ุฏุฑุฏุดุฉ ุฌุฏูุฏุฉ")],
            [KeyboardButton("ุงูุฏุฑุฏุดุงุช")],
 
            ]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text("๐ช ุฎุฑุฌุช ูู ุงููุถุน.", reply_markup=reply_markup)
        else:
            name = context.user_data.get("name_chat")
            import time
        
            chat_one = data_ai.select(update.message.from_user.id, name=name).select_chat_one() 
            if chat_one:
                messages = data_ai.select(id_user=update.message.from_user.id, id_chat=chat_one[0]).messages()
                
                
                ms_chat = generate(text, messages)
                data_ai.save_chat(text_chat=text, role="user", id_user=update.message.from_user.id, id_chat=chat_one[0] ).save()
                await update.message.reply_text(ms_chat)
                data_ai.save_chat(text_chat=ms_chat, role="assistant", id_user=update.message.from_user.id, id_chat=chat_one[0]).save()


        
      
    elif text == "ุฏุฑุฏุดุฉ ุฌุฏูุฏุฉ":
       context.user_data["in_new_chat"] = True 
       await update.message.reply_text("ุฃุฏุฎู ุฅุณู ุงูุฏุฑุฏุดุฉ ูู ูุธูู")
    elif context.user_data.get("in_new_chat"):
        context.user_data["name_chat"] = text
        await update.message.reply_text("ุงูุดุฎุต ุงูุฐู ุชุฑูุฏ ุงูุชุญุฏุซ ูุนู")
        context.user_data["in_new_chat"] = False
        context.user_data["in_new_chat_2"] = True
    elif context.user_data.get("in_new_chat_2"):
        context.user_data["name_ai"] = text
  
        data_ai.save_chat(context.user_data["name_chat"], "assistant", update.message.from_user.id).new_chat(context.user_data["name_chat"], context.user_data["name_ai"], update.message.from_user.id)
        context.user_data["in_new_chat_2"] = False
        await update.message.reply_text("โ ุชู ุฅูุดุงุก ุงูุฏุฑุฏุดุฉ")
    elif text == "ุงูุฏุฑุฏุดุงุช":
        chats = data_ai.select(update.message.from_user.id).select_chats()
       
        if chats == False:
            await update.message.reply_text("ูุง ููุฌุฏ ูุฏูู ุฃู ุฏุฑุฏุดุฉ")
        else:
            keyboard = []
            for chat in chats:
                keyboard.append([KeyboardButton(chat[1])])
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            await update.message.reply_text("ุงุฎุชุฑ ุงูุฏุฑุฏุดุฉ", reply_markup=reply_markup)
            context.user_data["chat"] = True
    elif context.user_data.get("chat"):
        chats = data_ai.select(update.message.from_user.id).select_chats()
        if text in [chat[1] for chat in chats]:
               
                context.user_data["id_chat"] = text
               
                context.user_data["in_mode"] = True
                context.user_data["name_chat"] = text
              
                context.user_data["chat"] = False
                keyboard = [
                    [KeyboardButton("โ ุฎุฑูุฌ")]
                ]
                reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
                await update.message.reply_text("โ ุฏุฎูุช ูููุถุน. ูุงุฏู ุงูุฃุฒุฑุงุฑ ุงููุชุงุญุฉ ููุท:", reply_markup=reply_markup)
        else:
            
            await update.message.reply_text(f"ุงูุฏุฑุฏุดุฉ ุบูุฑ ููุฌูุฏุฉ")        
    
  

def NewUsers(update: Update):
    if data_ai.select(update.message.from_user.id).select() == None:
        data_ai.new_users(update.message.from_user.id, update.message.from_user.full_name).save()
   
def main():
    app = Application.builder().token(TOKEN).read_timeout(30).connect_timeout(30).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT, handle_message))
    app.run_polling()

if __name__ == "__main__":
    main()